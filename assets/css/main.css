// ==============================
// BASEMAPS
// ==============================

const osm=new ol.layer.Tile({
	title: "OpenStreetMap",
	type: "base",
	visible: true,
	source: new ol.source.OSM()
});

const stamenWatercolor=new ol.layer.Tile({

	title: 'Stamen Watercolor',
	type: 'base',
	visible: false,
	source: new ol.source.StadiaMaps({
		layer: 'stamen_watercolor'
	})
});

const stamenToner=new ol.layer.Tile({

	title: 'Stamen Toner',
	type: 'base',
	visible: false,
	source: new ol.source.StadiaMaps({
		layer: 'stamen_toner'
	})
});

const esriTopoBasemap=new ol.layer.Tile({

	title: 'ESRI Topographic',
	type: 'base',
	visible: false,
	source: new ol.source.XYZ({
		attributions: 'Tiles © ESRI',
		url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}'
	})
});

const esriWorldImagery=new ol.layer.Tile({

	title: 'ESRI World Imagery',
	type: 'base',
	visible: false,
	source: new ol.source.XYZ({
		attributions: 'Tiles © ESRI',
		url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'
	})
});

const basemapLayers=new ol.layer.Group({
	title: 'Basemaps',
	fold: 'open',
	layers: [osm, stamenWatercolor, stamenToner, esriTopoBasemap, esriWorldImagery]
});

// ==============================
// WMS LAYERS
// ==============================

const geoServerURL='https://www.gis-geoserver.polimi.it/geoserver/gisgeoserver_20/wms';

function createWMSLayer(title, layerName) {
	return new ol.layer.Image({

		title: title,
		visible: false,
		source: new ol.source.ImageWMS({

			url: geoServerURL,
			params: {
				'LAYERS': layerName,
				'TILED': true,
				'STYLES': ''
			}

			,
			ratio: 1,
			serverType: 'geoserver'
		})
});
}

const overlayLayerList=[ createWMSLayer('NO₂ CAMS – December 2022', 'gisgeoserver_20:CzechRepublic_CAMS_no2_2022_12'),
createWMSLayer('PM2.5 CAMS – December 2022', 'gisgeoserver_20:CzechRepublic_CAMS_pm2p5_2022_12'),
createWMSLayer('NO₂ – Annual average 2022', 'gisgeoserver_20:CzechRepublic_average_no2_2022'),
createWMSLayer('PM2.5 – Annual average 2022', 'gisgeoserver_20:CzechRepublic_average_pm2p5_2022'),
createWMSLayer('NO₂ – Concentration map 2022', 'gisgeoserver_20:CZ_no2_concentration_map_2022'),
createWMSLayer('PM2.5 – Concentration map 2020', 'gisgeoserver_20:CZ_pm2p5_concentration_map_2020'),
createWMSLayer('PM2.5 – Concentration map 2022', 'gisgeoserver_20:CZ_pm2p5_concentration_map_2022'),
createWMSLayer('NO₂ – Concentration map 2020', 'gisgeoserver_20:CZ_no2_concentration_map_2020')];

const overlayLayers=new ol.layer.Group({
	title: 'Overlay Layers',
	fold: 'open',
	layers: overlayLayerList
});

// ==============================
// MAP
// ==============================

const map=new ol.Map({

	target: 'map',
	layers: [basemapLayers, overlayLayers],
	view: new ol.View({
		center: ol.proj.fromLonLat([15.4730, 49.8175]),
		zoom: 7
	})
});

// ==============================
// CONTROLS
// ==============================

map.addControl(new ol.control.ScaleLine());

map.addControl(new ol.control.MousePosition({
		coordinateFormat: ol.coordinate.createStringXY(4),
		projection: 'EPSG:4326',
		className: 'custom-control',
		placeholder: '0.0000, 0.0000'
	}));

const layerSwitcher=new LayerSwitcher({
	activationMode: 'click',
	startActive: true,
	tipLabel: 'Layers',
	groupSelectStyle: 'children'
});
map.addControl(layerSwitcher);

// ==============================
// STYLE DINAMICO SUL LAYER SWITCHER
// ==============================

setTimeout(()=> {
		const ls=document.querySelector('.layer-switcher');

		if (ls) {
			ls.style.position='absolute';
			ls.style.top='3.5em';
			ls.style.right='0.5em';
			ls.style.backgroundColor='white';
			ls.style.color='black';
			ls.style.border='2px solid red';
			ls.style.maxWidth='250px';
			ls.style.padding='10px';
			ls.style.boxShadow='0 2px 6px rgba(0,0,0,0.2)';
			ls.style.zIndex='1000';

			const uls=ls.querySelectorAll('ul');

			uls.forEach(ul=> {
					ul.style.listStyle='none';
					ul.style.paddingLeft='0';
					ul.style.margin='0';
				});

			const lis=ls.querySelectorAll('li');

			lis.forEach(li=> {
					li.style.marginTop='0.3em';
					li.style.color='black';
				});

			const labels=ls.querySelectorAll('label');

			labels.forEach(label=> {
					label.style.color='black';
				});

			const inputs=ls.querySelectorAll('input[type="radio"], input[type="checkbox"]');

			inputs.forEach(input=> {
					input.style.marginRight='6px';
				});
		}
	}

	, 500);

// ==============================
// LEGENDA
// ==============================

let legendHTMLString='<ul>';

function getLegendElement(title, color) {
	return `<li><span class="legend-color" style="background-color:${color}"></span>$ {
		title
	}

	</li>`;
}

overlayLayerList.forEach(layer=> {
		const title=layer.get('title');
		legendHTMLString +=getLegendElement(title, '#cccccc');
	});
legendHTMLString+='</ul>';
document.getElementById('legend-content').innerHTML=legendHTMLString;

// ==============================
// FULLSCREEN
// ==============================

document.getElementById('fullscreen-toggle').addEventListener('click', function (e) {
		e.preventDefault();
		const header=document.getElementById('header');

		if ( !document.fullscreenElement) {
			document.documentElement.requestFullscreen().then(()=> {
					header.style.display='none';
				});
		}

		else {
			document.exitFullscreen().then(()=> {
					header.style.display='block';
				});
		}
	});

document.addEventListener('fullscreenchange', ()=> {
		if ( !document.fullscreenElement) {
			document.getElementById('header').style.display='block';
		}
	});

// ==============================
// CURSORE INTERATTIVO
// ==============================

map.on('pointermove', function (event) {
		const hit=map.hasFeatureAtPixel(event.pixel);
		map.getTargetElement().style.cursor=hit ? 'pointer' : '';
	});